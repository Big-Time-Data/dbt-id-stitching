

DROP TABLE IF EXISTS rudderstack.rs_user_journey CASCADE;

with cte_user_journey as (
  Select distinct * 
  From 
      (
          Select distinct
              'Page' as event
              , p.title as event_text
              , p.anonymous_id
              , p.id as event_id
              , coalesce(p.user_id, (case when u.edge_label = 'user_id' then u.edge else null end) ) as user_id
              , case when u.edge_label = 'email' then u.edge else null end  as email
              , p.timestamp
              , p.channel
              --, p.context_campaign_click as campaign_click
              --, p.context_campaign_content as campaign_content
              , p.context_campaign_medium as campaign_medium
              , p.context_campaign_name as campaign_name
              , p.context_campaign_source as campaign_source
              --, p.context_campaign_term as campaign_term
              , p.context_page_referrer as referrer
              , p.context_page_url as url
              , p.title 
              , p.context_request_ip as ip
              , case when p.user_id is null and u.edge is not null 
                     then 'Unknown' else 'Known' 
                     end as event_timing
        	  , coalesce(u.rudder_id::text, p.anonymous_id) as rudder_id
          From rudderstack.pages p 
             -- Left Outer Join cte_user_rollup u on p.anonymous_id = u.anonymous_id
             Left Outer Join rudderstack.rs_user_id_graph u on p.anonymous_id = u.edge  or p.user_id = u.edge 
        

          union all 

          Select Distinct
              t.event
              , t.event_text
              , t.anonymous_id
              , t.id as event_id
              , coalesce(t.user_id, (case when u.edge_label = 'user_id' then u.edge else null end) ) as user_id
              , coalesce(t.context_traits_email, (case when u.edge_label = 'email' then u.edge else null end )) as email
              , t.timestamp
              , t.channel
              --, t.context_campaign_click as campaign_click
              --, t.context_campaign_content as campaign_content
              , t.context_campaign_medium as campaign_medium
              , t.context_campaign_name as campaign_name
              , t.context_campaign_source as campaign_source
              --, t.context_campaign_term as campaign_term
              , t.context_page_referrer as referrer
              , t.context_page_url as url
              , t.context_page_title as title
              , t.context_request_ip as ip
              , case when t.user_id is null and u.edge is not null 
                     then 'Unknown' else 'Known' 
                     end as event_timing
              , coalesce(u.rudder_id::text, t.anonymous_id) as rudder_id
          From rudderstack.tracks t 
--            Left Outer Join cte_user_rollup u on t.anonymous_id = u.anonymous_id
              Left Outer Join rudderstack.rs_user_id_graph u on t.anonymous_id = u.edge or t.user_id = u.edge
      ) user_journey
      )

Select * 
    , extract(seconds from (timestamp - lag(timestamp) 
         over (order by rudder_id, timestamp)))  as time_lag
    , dense_rank() over (partition by rudder_id 
          order by timestamp asc, case when event = 'Page' then 1 else 2 end) 
          as user_event_step
INTO rudderstack.rs_user_journey
from cte_user_journey
order by timestamp; 


CREATE OR REPLACE VIEW rudderstack."qry_rs_user_journey"  
AS 

with cte_user_totals as (
  Select  rudder
  		-- user_id
        ,min(to_date(timestamp::text, 'YYYY-mm-01')) as cohort_first_touch
        ,min(case when user_event_step = 1 
                  then campaign_name else null end) as cohort_first_touch_campaign 
  	 ,min(case when event = 'order_completed' 
                  then to_date(timestamp::text, 'YYYY-mm-01') else null end) 
                  as cohort_first_order
  	 ,max(case when event = 'order_completed' 
                  then to_date(timestamp::text, 'YYYY-mm-01') else null end) 
                  as last_order_event
  	 ,count(distinct case when  event = 'order_completed'
              	   then timestamp else null end) as order_event_count
  FROM   rudderstack.rs_user_journey2
  group by rudder_id  	--user_id 
                    )

  SELECT uj.rudder_id,
         uj.event,
         uj.event_text,
         uj.anonymous_id,
         uj.user_id,
         uj.email,
         uj."timestamp",
         uj.channel,
--         uj.campaign_click,
--         uj.campaign_content,
         uj.campaign_medium,
         uj.campaign_name,
         uj.campaign_source,
--         uj.campaign_term,
         uj.referrer,
         uj.url,
         uj.title,
         uj.ip,
         uj.event_timing,
         uj.time_lag,
         uj.user_event_step,
         ut.cohort_first_touch,
         ut.cohort_first_touch_campaign, 
         ut.cohort_first_order,
  	  ut.last_order_event,
  	  ut.order_event_count
  FROM   rudderstack.rs_user_journey as uj
  	   Left outer join cte_user_totals ut on rs_user_journey.rudder_id = ut.rudder_id;
  
  
